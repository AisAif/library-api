{
  "openapi": "3.0.0",
  "info": {
    "title": "Library API",
    "description": "API For Your Book Collections",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Auth",
      "description": "Auth API"
    },
    {
      "name": "Book",
      "description": "Book API"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register",
        "operationId": "register",
        "requestBody": {
          "$ref": "#/components/requestBodies/RegisterRequest"
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestResponse"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login",
        "operationId": "login",
        "requestBody": {
          "$ref": "#/components/requestBodies/LoginRequest"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/LoginResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          }
        }
      }
    },
    "/auth/profile": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get Profile",
        "operationId": "getProfile",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ProfileResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          }
        }
      },
      "patch": {
        "tags": ["Auth"],
        "summary": "Update Profile",
        "operationId": "updateProfile",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UpdateUserRequest"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/LoginResponse"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          }
        }
      }
    },
    "/books": {
      "post": {
        "tags": ["Book"],
        "summary": "Create Your Book Collection",
        "operationId": "createBook",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/CreateBookRequest"
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          }
        }
      },
      "get": {
        "tags": ["Book"],
        "summary": "Get All Your Book Collections",
        "operationId": "getBooks",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/Search"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/BooksResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          }
        }
      }
    },
    "/books/{book_id}": {
      "get": {
        "tags": ["Book"],
        "summary": "Get Your Book Collection",
        "operationId": "getBook",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/BookId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/BookResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          }
        }
      },
      "patch": {
        "tags": ["Book"],
        "summary": "Update Your Book Collection",
        "operationId": "updateBook",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/BookId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UpdateBookRequest"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/UpdateResponse"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          }
        }
      },
      "delete": {
        "tags": ["Book"],
        "summary": "Delete Your Book Collection",
        "operationId": "deleteBook",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/BookId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MetaSchema": {
        "type": "object",
        "properties": {
          "itemsPerPage": {
            "type": "number",
            "example": 5
          },
          "totalItems": {
            "type": "number",
            "example": 10
          },
          "currentPage": {
            "type": "number",
            "example": 1
          },
          "sortBy": {
            "type": "array",
            "example": [["name", "DESC"]]
          },
          "search": {
            "type": "string",
            "example": "test"
          },
          "filter": {
            "type": "object",
            "example": {
              "age": "$gte:3"
            }
          }
        }
      },
      "LinksSchema": {
        "type": "object",
        "properties": {
          "first": {
            "type": "string",
            "example": "http://localhost:3000/books?limit=5&page=1&sortBy=title:ASC&search=test&filter.status=$eq:available"
          },
          "previous": {
            "type": "string",
            "example": "http://localhost:3000/books?limit=5&page=1&sortBy=title:ASC&search=test&filter.status=$eq:available"
          },
          "current": {
            "type": "string",
            "example": "http://localhost:3000/books?limit=5&page=1&sortBy=title:ASC&search=test&filter.status=$eq:available"
          },
          "next": {
            "type": "string",
            "example": "http://localhost:3000/books?limit=5&page=2&sortBy=title:ASC&search=test&filter.status=$eq:available"
          },
          "last": {
            "type": "string",
            "example": "http://localhost:3000/books?limit=5&page=2&sortBy=title:ASC&search=test&filter.status=$eq:available"
          }
        }
      },
      "RegisterSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "password_confirm": {
            "type": "string"
          }
        }
      },
      "LoginSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "UserSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "test"
          },
          "username": {
            "type": "string",
            "example": "test"
          }
        }
      },
      "UpdateUserSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "test"
          },
          "username": {
            "type": "string",
            "example": "test"
          },
          "password": {
            "type": "string",
            "example": "testtest"
          },
          "password_confirm": {
            "type": "string",
            "example": "testtest"
          }
        }
      },
      "BookSchema": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "test"
          },
          "author": {
            "type": "string",
            "example": "test"
          },
          "status": {
            "type": "string",
            "enum": ["unread", "in_reading", "read"],
            "example": "unread"
          },
          "summary": {
            "type": "string",
            "example": "test"
          },
          "total_page": {
            "type": "number",
            "example": 99
          },
          "year": {
            "type": "string",
            "example": "2022"
          },
          "created_at": {
            "type": "string",
            "example": "2022-03-30T16:12:01.000Z"
          },
          "updated_at": {
            "type": "string",
            "example": "2022-03-30T16:12:01.000Z"
          }
        }
      },
      "CreateBookSchema": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "test"
          },
          "author": {
            "type": "string",
            "example": "test"
          },
          "summary": {
            "type": "string",
            "example": "test"
          },
          "total_page": {
            "type": "number",
            "example": 99
          },
          "year": {
            "type": "string",
            "example": "2022"
          }
        }
      },
      "UpdateBookSchema": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "test"
          },
          "status": {
            "type": "string",
            "enum": ["unread", "in_reading", "read"],
            "example": "unread"
          },
          "author": {
            "type": "string",
            "example": "test"
          },
          "summary": {
            "type": "string",
            "example": "test"
          },
          "total_page": {
            "type": "number",
            "example": 99
          },
          "year": {
            "type": "string",
            "example": "2022"
          }
        }
      }
    },
    "requestBodies": {
      "RegisterRequest": {
        "description": "Register",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LoginSchema"
            }
          }
        }
      },
      "LoginRequest": {
        "description": "Login",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RegisterSchema"
            }
          }
        }
      },
      "UpdateUserRequest": {
        "description": "Update User",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UserSchema"
            }
          }
        }
      },
      "CreateBookRequest": {
        "description": "Create Book",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateBookSchema"
            }
          }
        }
      },
      "UpdateBookRequest": {
        "description": "Update Book",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UpdateBookSchema"
            }
          }
        }
      }
    },
    "responses": {
      "BadRequestResponse": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Bad Request."
                },
                "statusCode": {
                  "type": "number",
                  "example": 400
                },
                "message": {
                  "type": "array",
                  "example": [
                    "name must be longer than or equal to 3 characters",
                    "name should not be empty"
                  ]
                }
              }
            }
          }
        }
      },
      "UnauthorizedResponse": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "statusCode": {
                  "type": "number",
                  "example": 401
                }
              }
            }
          }
        }
      },
      "NotFoundResponse": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Not Found"
                },
                "statusCode": {
                  "type": "number",
                  "example": 404
                }
              }
            }
          }
        }
      },
      "LoginResponse": {
        "description": "Login",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Success"
                },
                "statusCode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE2NjUwOTQ3NjksImV4cCI6MTY2NTA5NDk2OX0.6hC9WbWx8oXwEh6rZwVpV5kLs9aJ8hLQ"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ProfileResponse": {
        "description": "Profile",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Success"
                },
                "statusCode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "$ref": "#/components/schemas/UserSchema"
                }
              }
            }
          }
        }
      },
      "UpdateResponse": {
        "description": "Update",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Updated successfully"
                },
                "statusCode": {
                  "type": "number",
                  "example": 200
                }
              }
            }
          }
        }
      },
      "DeleteResponse": {
        "description": "Delete",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Deleted successfully"
                },
                "statusCode": {
                  "type": "number",
                  "example": 200
                }
              }
            }
          }
        }
      },
      "UsersResponse": {
        "description": "Get All Users",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Success."
                },
                "statusCode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSchema"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/MetaSchema"
                },
                "links": {
                  "$ref": "#/components/schemas/LinksSchema"
                }
              }
            }
          }
        }
      },
      "BooksResponse": {
        "description": "Get All Books",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Success."
                },
                "statusCode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BookSchema"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/MetaSchema"
                    },
                    "links": {
                      "$ref": "#/components/schemas/LinksSchema"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "BookResponse": {
        "description": "Get Your Book Collection",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Success."
                },
                "statusCode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "$ref": "#/components/schemas/BookSchema"
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "Authorization": {
        "name": "Authorization",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "example": "Bearer {token}"
        }
      },
      "BookId": {
        "name": "bookId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "example": "1"
        }
      },
      "Page": {
        "name": "page",
        "in": "query",
        "required": false,
        "schema": {
          "type": "number",
          "example": 1
        }
      },
      "Limit": {
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "number",
          "example": 5
        }
      },
      "Search": {
        "name": "search",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "test"
        }
      }
    }
  }
}
